#!/bin/bash

# Description {{{
# ===============
# Configuration file for the Binary Space Partitioning Window Manager.
# This is part of my dotfiles, which are managed with GNU Stow.  See
# https://gitlab.com/protesilaos/dotfiles

# Note that the three `{` and `}` that surround comment blocks are to
# demarcate Vim folds.  The fold method is defined in the very last line
# of this document, the "modeline".

# }}}

# Visual options {{{
# ============================

# window management
# ----------------------------
# also see `man bspc` or `man bspwm`
bspc config border_width 2
bspc config window_gap 8
bspc config split_ratio 0.50
bspc config borderless_monocle true # smart borders
bspc config gapless_monocle true # smart gaps
bspc config single_monocle true # smart gaps
bspc config focus_follows_pointer false
bspc config pointer_follows_monitor true # brings pointer to focused monitor (see workspaces)
bspc config pointer_modifier mod1 # ALT key (see why right below)
bspc config pointer_action1 move # alt + left-click to move node
bspc config pointer_action2 resize_side # alt + right-click to resize node splits
bspc config click_to_focus any # focus with any click
bspc config swallow_first_click false # play the mouse event (e.g. right click context menu)
bspc config initial_polarity first_child
bspc config ignore_ewmh_focus true # prevent focus stealing

# Program-specific rules (use `xprop` to find each window's specifics).
# For special use cases, I apply "my_float_window" for programs that can
# accept a custom name/class.  These two definitions apply a custom
# class and name respectively.
bspc rule -a my_float_window:* state=floating
bspc rule -a *:my_float_window state=floating

# External window rules.
                                                                     

# colours
# ----------------------------
# NOTE these are the fallback values, but not what is actually loaded
# post-launch (see autostart for own_script_bspwm_config_post_launch)

# EXPLAIN: bspwm does not read the custom colours if they are sourced
# from another file at launch.  Instead it defaults to its own colour
# values.  Here I set the defaults I would prefer to have, while I
# autostart the script that sources and then applies the colours I
# actually want.
bspc config normal_border_color "#1a1a1a" # unfocused window
bspc config active_border_color "#555555" # focused window, unfocused monitor
bspc config focused_border_color "#448822" # focused window, focused monitor
bspc config presel_feedback_color "#ccaa00" # feedback for manual node split

# }}}


sxhkd &

# display compositor
if [ -x /usr/bin/compton ]; then
    compton --config "$HOME/.config/compton.conf" &
fi

# Run the tool that sets the wallpaper

if [ -x /usr/bin/feh ]; then
    if [ -f "$HOME/.fehbg" ]; then
        "$HOME/.fehbg" &
    elif [ -f "$HOME/.wallpaper.jpg" ]; then
        feh --bg-fill "$HOME/.wallpaper.jpg" &
    else
        feh --randomize --bg-fill "/usr/share/backgrounds/*" &
    fi
fi

# vim:ft=sh:foldmethod=marker
